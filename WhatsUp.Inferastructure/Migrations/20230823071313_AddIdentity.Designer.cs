// <auto-generated />
using System;
using Bnan.Inferastructure.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bnan.Inferastructure.Migrations
{
    [DbContext(typeof(BnanKSAContext))]
    [Migration("20230823071313_AddIdentity")]
    partial class AddIdentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrCasLessorMechanism", b =>
                {
                    b.Property<string>("CrCasLessorMechanismCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Cas_Lessor_Mechanism_Code")
                        .IsFixedLength();

                    b.Property<string>("CrCasLessorMechanismProcedures")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Cas_Lessor_Mechanism_Procedures")
                        .IsFixedLength();

                    b.Property<bool?>("CrCasLessorMechanismActivate")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Cas_Lessor_Mechanism_Activate");

                    b.Property<int?>("CrCasLessorMechanismDaysAlertAboutExpire")
                        .HasColumnType("int")
                        .HasColumnName("CR_Cas_Lessor_Mechanism_Days_Alert_About_Expire");

                    b.Property<int?>("CrCasLessorMechanismKmAlertAboutExpire")
                        .HasColumnType("int")
                        .HasColumnName("CR_Cas_Lessor_Mechanism_KM_Alert_About_Expire");

                    b.Property<string>("CrCasLessorMechanismProceduresClassification")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Cas_Lessor_Mechanism_Procedures_Classification")
                        .IsFixedLength();

                    b.HasKey("CrCasLessorMechanismCode", "CrCasLessorMechanismProcedures");

                    b.HasIndex("CrCasLessorMechanismProcedures");

                    b.ToTable("CR_Cas_Lessor_Mechanism", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasLessorImage", b =>
                {
                    b.Property<string>("CrMasLessorImageCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Lessor_Image_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorImageCloseContractEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Close_Contract_Email");

                    b.Property<string>("CrMasLessorImageCloseContractWhatUp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Close_Contract_WhatUp");

                    b.Property<string>("CrMasLessorImageContArConditions1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Cont_Ar_Conditions_1");

                    b.Property<string>("CrMasLessorImageContArConditions2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Cont_Ar_Conditions_2");

                    b.Property<string>("CrMasLessorImageContArConditions3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Cont_Ar_Conditions_3");

                    b.Property<string>("CrMasLessorImageContEnConditions1")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Cont_En_Conditions_1");

                    b.Property<string>("CrMasLessorImageContEnConditions2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Cont_En_Conditions_2");

                    b.Property<string>("CrMasLessorImageContEnConditions3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Cont_En_Conditions_3");

                    b.Property<string>("CrMasLessorImageCreateContractEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Create_Contract_Email");

                    b.Property<string>("CrMasLessorImageCreateContractWhatUp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Create_Contract_WhatUp");

                    b.Property<string>("CrMasLessorImageEndContractEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_End_Contract_Email");

                    b.Property<string>("CrMasLessorImageEndContractWhatUp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_End_Contract_WhatUp");

                    b.Property<string>("CrMasLessorImageHourContractEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Hour_Contract_Email");

                    b.Property<string>("CrMasLessorImageHourContractWhatUp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Hour_Contract_WhatUp");

                    b.Property<string>("CrMasLessorImageLogo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Logo");

                    b.Property<string>("CrMasLessorImageLogoPrint")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Logo_Print");

                    b.Property<string>("CrMasLessorImageSignatureDirector")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Signature_Director");

                    b.Property<string>("CrMasLessorImageStamp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Stamp");

                    b.Property<string>("CrMasLessorImageStampFullAmountPaid")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Stamp_Full_Amount_Paid");

                    b.Property<string>("CrMasLessorImageStampOutsideCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Stamp_Outside_City");

                    b.Property<string>("CrMasLessorImageStampOutsideCountry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Stamp_Outside_Country");

                    b.Property<string>("CrMasLessorImageTomorrowContractEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Tomorrow_Contract_Email");

                    b.Property<string>("CrMasLessorImageTomorrowContractWhatUp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Image_Tomorrow_Contract_WhatUp");

                    b.HasKey("CrMasLessorImageCode");

                    b.ToTable("CR_Mas_Lessor_Image", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasLessorInformation", b =>
                {
                    b.Property<string>("CrMasLessorInformationCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Lessor_Information_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationAccount")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Account");

                    b.Property<string>("CrMasLessorInformationArLongName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Ar_Long_Name");

                    b.Property<string>("CrMasLessorInformationArShortName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Lessor_Information_Ar_Short_Name");

                    b.Property<string>("CrMasLessorInformationCallFree")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_Lessor_Information_Call_Free")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationClassification")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("CR_Mas_Lessor_Information_Classification")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationCommunicationMobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_Lessor_Information_Communication_Mobile")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationContEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Cont_Email");

                    b.Property<string>("CrMasLessorInformationContWhatsapp")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_Lessor_Information_Cont_Whatsapp")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationDirectorArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Lessor_Information_Director_Ar_Name");

                    b.Property<string>("CrMasLessorInformationDirectorEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Lessor_Information_Director_En_Name");

                    b.Property<string>("CrMasLessorInformationEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Email");

                    b.Property<string>("CrMasLessorInformationEnLongName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_En_Long_Name");

                    b.Property<string>("CrMasLessorInformationEnShortName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Lessor_Information_En_Short_Name");

                    b.Property<string>("CrMasLessorInformationFaceBook")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_FaceBook");

                    b.Property<string>("CrMasLessorInformationGovernmentNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_Lessor_Information_Government_No")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationInstagram")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Instagram");

                    b.Property<string>("CrMasLessorInformationLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Location");

                    b.Property<string>("CrMasLessorInformationReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Reasons");

                    b.Property<string>("CrMasLessorInformationStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Lessor_Information_Status")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationTaxNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("char(30)")
                        .HasColumnName("CR_Mas_Lessor_Information_Tax_No")
                        .IsFixedLength();

                    b.Property<string>("CrMasLessorInformationTwiter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Lessor_Information_Twiter");

                    b.HasKey("CrMasLessorInformationCode");

                    b.ToTable("CR_Mas_Lessor_Information", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasRenterInformation", b =>
                {
                    b.Property<string>("CrMasRenterInformationId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_Renter_Information_Id")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationArName")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)")
                        .HasColumnName("CR_Mas_Renter_Information_Ar_Name");

                    b.Property<string>("CrMasRenterInformationBank")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Renter_Information_Bank")
                        .IsFixedLength();

                    b.Property<DateTime?>("CrMasRenterInformationBirthDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_BirthDate");

                    b.Property<int?>("CrMasRenterInformationCopyId")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Renter_Information_CopyID");

                    b.Property<DateTime?>("CrMasRenterInformationDateFirstInteraction")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Date_First_Interaction");

                    b.Property<DateTime?>("CrMasRenterInformationDateLastContract")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Date_Last_Contract");

                    b.Property<DateTime?>("CrMasRenterInformationDateLastInteraction")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Date_Last_Interaction");

                    b.Property<int?>("CrMasRenterInformationDays")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Renter_Information_Days");

                    b.Property<DateTime?>("CrMasRenterInformationDrivingLicenseDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Driving_License_Date");

                    b.Property<string>("CrMasRenterInformationDrivingLicenseType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Renter_Information_Driving_License_Type")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CR_Mas_Renter_Information_Email");

                    b.Property<string>("CrMasRenterInformationEnName")
                        .HasMaxLength(110)
                        .HasColumnType("nvarchar(110)")
                        .HasColumnName("CR_Mas_Renter_Information_En_Name");

                    b.Property<int?>("CrMasRenterInformationEvaluationCount")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Renter_Information_Evaluation_Count");

                    b.Property<decimal?>("CrMasRenterInformationEvaluationTotal")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("CR_Mas_Renter_Information_Evaluation_Total");

                    b.Property<decimal?>("CrMasRenterInformationEvaluationValue")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("CR_Mas_Renter_Information_Evaluation_Value");

                    b.Property<DateTime?>("CrMasRenterInformationExpiryDrivingLicenseDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Expiry_Driving_License_Date");

                    b.Property<DateTime?>("CrMasRenterInformationExpiryIdDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Expiry_Id_Date");

                    b.Property<string>("CrMasRenterInformationGender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Renter_Information_Gender")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationIban")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CR_Mas_Renter_Information_Iban");

                    b.Property<bool?>("CrMasRenterInformationIdstatus")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Renter_Information__IDStatus");

                    b.Property<string>("CrMasRenterInformationIdtrype")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Renter_Information_IDTRype")
                        .IsFixedLength();

                    b.Property<DateTime?>("CrMasRenterInformationIssueIdDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_Issue_Id_Date");

                    b.Property<string>("CrMasRenterInformationJobs")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Renter_Information_Jobs")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationLangue")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Renter_Information_Langue")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationMobile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CR_Mas_Renter_Information_Mobile");

                    b.Property<string>("CrMasRenterInformationNationality")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Renter_Information_Nationality")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Renter_Information_Reasons");

                    b.Property<string>("CrMasRenterInformationRenterIdImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Renter_Information_Renter_Id_Image");

                    b.Property<string>("CrMasRenterInformationRenterLicenseImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Renter_Information_Renter_License_Image");

                    b.Property<string>("CrMasRenterInformationSector")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Renter_Information_Sector")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationSignature")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Renter_Information_Signature");

                    b.Property<string>("CrMasRenterInformationStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Renter_Information_Status")
                        .IsFixedLength();

                    b.Property<string>("CrMasRenterInformationTaxNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_Renter_Information_Tax_No")
                        .IsFixedLength();

                    b.Property<int?>("CrMasRenterInformationTraveledDistance")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Renter_Information_Traveled_Distance");

                    b.Property<DateTime?>("CrMasRenterInformationUpDateLicenseData")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_UpDate_License_Data");

                    b.Property<DateTime?>("CrMasRenterInformationUpDatePersonalData")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_UpDate_Personal_Data");

                    b.Property<DateTime?>("CrMasRenterInformationUpDateWorkplaceData")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Renter_Information_UpDate_Workplace_Data");

                    b.Property<decimal?>("CrMasRenterInformationValue")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("CR_Mas_Renter_Information_Value");

                    b.Property<string>("CrMasRenterInformationWorkplaceSubscription")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Renter_Information_Workplace_Subscription")
                        .IsFixedLength();

                    b.HasKey("CrMasRenterInformationId");

                    b.HasIndex(new[] { "CrMasRenterInformationBank" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Bank");

                    b.HasIndex(new[] { "CrMasRenterInformationDrivingLicenseType" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Driving_License_Type");

                    b.HasIndex(new[] { "CrMasRenterInformationGender" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Gender");

                    b.HasIndex(new[] { "CrMasRenterInformationIdtrype" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_IDTRype");

                    b.HasIndex(new[] { "CrMasRenterInformationJobs" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Jobs");

                    b.HasIndex(new[] { "CrMasRenterInformationNationality" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Nationality");

                    b.HasIndex(new[] { "CrMasRenterInformationSector" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Sector");

                    b.HasIndex(new[] { "CrMasRenterInformationWorkplaceSubscription" }, "IX_CR_Mas_Renter_Information_CR_Mas_Renter_Information_Workplace_Subscription");

                    b.ToTable("CR_Mas_Renter_Information", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupAccountBank", b =>
                {
                    b.Property<string>("CrMasSupAccountBankCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Account_Bank_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupAccountBankArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Account_Bank_Ar_Name");

                    b.Property<string>("CrMasSupAccountBankEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Account_Bank_En_Name");

                    b.Property<string>("CrMasSupAccountBankReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Account_Bank_Reasons");

                    b.Property<string>("CrMasSupAccountBankStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Account_Bank_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupAccountBankCode");

                    b.ToTable("CR_Mas_Sup_Account_Bank", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupAccountPaymentMethod", b =>
                {
                    b.Property<string>("CrMasSupAccountPaymentMethodCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupAccountPaymentMethodAcceptImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Accept_Image");

                    b.Property<string>("CrMasSupAccountPaymentMethodArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Ar_Name");

                    b.Property<string>("CrMasSupAccountPaymentMethodClassification")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Classification")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupAccountPaymentMethodEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_En_Name");

                    b.Property<string>("CrMasSupAccountPaymentMethodReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Reasons");

                    b.Property<string>("CrMasSupAccountPaymentMethodRejectImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Reject_Image");

                    b.Property<string>("CrMasSupAccountPaymentMethodStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupAccountPaymentMethodCode");

                    b.ToTable("CR_Mas_Sup_Account_Payment_Method", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupAccountReference", b =>
                {
                    b.Property<string>("CrMasSupAccountReceiptReferenceCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Account_Receipt_Reference_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupAccountPaymentMethodReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Reasons");

                    b.Property<string>("CrMasSupAccountPaymentMethodStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Account_Payment_Method_Status")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupAccountReceiptReferenceArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Account_Receipt_Reference_Ar_Name");

                    b.Property<string>("CrMasSupAccountReceiptReferenceEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Account_Receipt_Reference_En_Name");

                    b.HasKey("CrMasSupAccountReceiptReferenceCode");

                    b.ToTable("CR_Mas_Sup_Account_Reference", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarAdvantage", b =>
                {
                    b.Property<string>("CrMasSupCarAdvantagesCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Advantages_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarAdvantagesArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Advantages_Ar_Name");

                    b.Property<string>("CrMasSupCarAdvantagesEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Advantages_En_Name");

                    b.Property<string>("CrMasSupCarAdvantagesReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Advantages_Reasons");

                    b.Property<string>("CrMasSupCarAdvantagesStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Advantages_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarAdvantagesCode");

                    b.ToTable("CR_Mas_Sup_Car_Advantages", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarBrand", b =>
                {
                    b.Property<string>("CrMasSupCarBrandCode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Sup_Car_Brand_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarBrandArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Brand_Ar_Name");

                    b.Property<string>("CrMasSupCarBrandEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Brand_En_Name");

                    b.Property<string>("CrMasSupCarBrandReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Brand_Reasons");

                    b.Property<string>("CrMasSupCarBrandStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Brand_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarBrandCode");

                    b.ToTable("CR_Mas_Sup_Car_Brand", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarCategory", b =>
                {
                    b.Property<string>("CrMasSupCarCategoryCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Car_Category_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarCategoryArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Car_Category_Ar_Name");

                    b.Property<string>("CrMasSupCarCategoryEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Car_Category_En_Name");

                    b.Property<string>("CrMasSupCarCategoryGroup")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Category_Group")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarCategoryReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Category_Reasons");

                    b.Property<string>("CrMasSupCarCategoryStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Category_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarCategoryCode");

                    b.HasIndex(new[] { "CrMasSupCarCategoryGroup" }, "IX_CR_Mas_Sup_Car_Category_CR_Mas_Sup_Car_Category_Group");

                    b.ToTable("CR_Mas_Sup_Car_Category", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarColor", b =>
                {
                    b.Property<string>("CrMasSupCarColorCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Color_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarColorArName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sup_Car_Color_Ar_Name");

                    b.Property<int?>("CrMasSupCarColorCounter")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Car_Color_Counter");

                    b.Property<string>("CrMasSupCarColorEnName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sup_Car_Color_En_Name");

                    b.Property<string>("CrMasSupCarColorImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Color_Image");

                    b.Property<string>("CrMasSupCarColorReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Color_Reasons");

                    b.Property<string>("CrMasSupCarColorStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Color_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarColorCode");

                    b.ToTable("CR_Mas_Sup_Car_Color", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarCvt", b =>
                {
                    b.Property<string>("CrMasSupCarCvtCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_CVT_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarCvtArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_CVT_Ar_Name");

                    b.Property<string>("CrMasSupCarCvtEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_CVT_En_Name");

                    b.Property<string>("CrMasSupCarCvtImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_CVT_Image");

                    b.Property<string>("CrMasSupCarCvtReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_CVT_Reasons");

                    b.Property<string>("CrMasSupCarCvtStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_CVT_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarCvtCode");

                    b.ToTable("CR_Mas_Sup_Car_CVT", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarDistribution", b =>
                {
                    b.Property<string>("CrMasSupCarDistributionBrand")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Brand")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarDistributionModel")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Model")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarDistributionCategory")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Category")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarDistributionYear")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Year")
                        .IsFixedLength();

                    b.Property<int?>("CrMasSupCarDistributionBagBags")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Bag_Bags");

                    b.Property<string>("CrMasSupCarDistributionConcatenateArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Concatenate_Ar_Name");

                    b.Property<string>("CrMasSupCarDistributionConcatenateEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Concatenate_En_Name");

                    b.Property<int?>("CrMasSupCarDistributionDoor")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Door");

                    b.Property<string>("CrMasSupCarDistributionImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Image");

                    b.Property<int?>("CrMasSupCarDistributionPassengers")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Passengers");

                    b.Property<string>("CrMasSupCarDistributionReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Reasons");

                    b.Property<int?>("CrMasSupCarDistributionSmallBags")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Small_Bags");

                    b.Property<string>("CrMasSupCarDistributionStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Distribution_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarDistributionBrand", "CrMasSupCarDistributionModel", "CrMasSupCarDistributionCategory", "CrMasSupCarDistributionYear");

                    b.HasIndex(new[] { "CrMasSupCarDistributionCategory" }, "IX_CR_Mas_Sup_Car_Distribution_CR_Mas_Sup_Car_Distribution_Category");

                    b.HasIndex(new[] { "CrMasSupCarDistributionModel" }, "IX_CR_Mas_Sup_Car_Distribution_CR_Mas_Sup_Car_Distribution_Model");

                    b.ToTable("CR_Mas_Sup_Car_Distribution", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarFuel", b =>
                {
                    b.Property<string>("CrMasSupCarFuelCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Fuel_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarFuelArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Fuel_Ar_Name");

                    b.Property<string>("CrMasSupCarFuelEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Fuel_En_Name");

                    b.Property<string>("CrMasSupCarFuelImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Fuel_Image");

                    b.Property<string>("CrMasSupCarFuelReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Fuel_Reasons");

                    b.Property<string>("CrMasSupCarFuelStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Fuel_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarFuelCode");

                    b.ToTable("CR_Mas_Sup_Car_Fuel", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarModel", b =>
                {
                    b.Property<string>("CrMasSupCarModelCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarModelArConcatenateName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Ar_Concatenate_Name");

                    b.Property<string>("CrMasSupCarModelArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Ar_Name");

                    b.Property<string>("CrMasSupCarModelBrand")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Brand")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarModelConcatenateEnName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Concatenate_En_Name");

                    b.Property<int?>("CrMasSupCarModelCounter")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Counter");

                    b.Property<string>("CrMasSupCarModelEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_En_Name");

                    b.Property<string>("CrMasSupCarModelGroup")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Group")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarModelReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Reasons");

                    b.Property<string>("CrMasSupCarModelStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Model_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarModelCode");

                    b.HasIndex(new[] { "CrMasSupCarModelBrand" }, "IX_CR_Mas_Sup_Car_Model_CR_Mas_Sup_Car_Model_Brand");

                    b.HasIndex(new[] { "CrMasSupCarModelGroup" }, "IX_CR_Mas_Sup_Car_Model_CR_Mas_Sup_Car_Model_Group");

                    b.ToTable("CR_Mas_Sup_Car_Model", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarRegistration", b =>
                {
                    b.Property<string>("CrMasSupCarRegistrationCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Registration_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarRegistrationArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Registration_Ar_Name");

                    b.Property<string>("CrMasSupCarRegistrationEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Car_Registration_En_Name");

                    b.Property<string>("CrMasSupCarRegistrationReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Car_Registration_Reasons");

                    b.Property<string>("CrMasSupCarRegistrationStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Car_Registration_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarRegistrationCode");

                    b.ToTable("CR_Mas_Sup_Car_Registration", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarYear", b =>
                {
                    b.Property<string>("CrMasSupCarYearCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Car_Year_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarYearGroup")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Car_Year_Group")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupCarYearNo")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Sup_Car_Year_No")
                        .IsFixedLength();

                    b.HasKey("CrMasSupCarYearCode");

                    b.HasIndex(new[] { "CrMasSupCarYearGroup" }, "IX_CR_Mas_Sup_Car_Year_CR_Mas_Sup_Car_Year_Group");

                    b.ToTable("CR_Mas_Sup_Car_Year", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupContractAdditional", b =>
                {
                    b.Property<string>("CrMasSupContractAdditionalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupContractAdditionalAcceptImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Accept_Image");

                    b.Property<string>("CrMasSupContractAdditionalArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Ar_Name");

                    b.Property<string>("CrMasSupContractAdditionalBlockImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Block_Image");

                    b.Property<string>("CrMasSupContractAdditionalEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_En_Name");

                    b.Property<string>("CrMasSupContractAdditionalGroup")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Group")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupContractAdditionalReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Reasons");

                    b.Property<string>("CrMasSupContractAdditionalRejectImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Reject_Image");

                    b.Property<string>("CrMasSupContractAdditionalStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Contract_Additional_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupContractAdditionalCode");

                    b.HasIndex(new[] { "CrMasSupContractAdditionalGroup" }, "IX_CR_Mas_Sup_Contract_Additional_CR_Mas_Sup_Contract_Additional_Group");

                    b.ToTable("CR_Mas_Sup_Contract_Additional", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupContractCarCheckup", b =>
                {
                    b.Property<string>("CrMasSupContractCarCheckupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupContractCarCheckupAcceptImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Accept_Image");

                    b.Property<string>("CrMasSupContractCarCheckupArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Ar_Name");

                    b.Property<string>("CrMasSupContractCarCheckupBlockImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Block_Image");

                    b.Property<string>("CrMasSupContractCarCheckupEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_En_Name");

                    b.Property<string>("CrMasSupContractCarCheckupReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Reasons");

                    b.Property<string>("CrMasSupContractCarCheckupRejectImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Reject_Image");

                    b.Property<string>("CrMasSupContractCarCheckupStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Contract_Car_Checkup_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupContractCarCheckupCode");

                    b.ToTable("CR_Mas_Sup_Contract_Car_Checkup", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupContractOption", b =>
                {
                    b.Property<string>("CrMasSupContractOptionsCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupContractOptionsAcceptImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Accept_Image");

                    b.Property<string>("CrMasSupContractOptionsArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Ar_Name");

                    b.Property<string>("CrMasSupContractOptionsBlockImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Block_Image");

                    b.Property<string>("CrMasSupContractOptionsEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_En_Name");

                    b.Property<string>("CrMasSupContractOptionsGroup")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Group")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupContractOptionsReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Reasons");

                    b.Property<string>("CrMasSupContractOptionsRejectImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Reject_Image");

                    b.Property<string>("CrMasSupContractOptionsStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Contract_Options_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupContractOptionsCode");

                    b.HasIndex(new[] { "CrMasSupContractOptionsGroup" }, "IX_CR_Mas_Sup_Contract_Options_CR_Mas_Sup_Contract_Options_Group");

                    b.ToTable("CR_Mas_Sup_Contract_Options", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupMembershipChoice", b =>
                {
                    b.Property<string>("CrMasSupMembershipChoiceCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("CR_Mas_Sup_Membership_Choice_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupMembershipChoiceGroup")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Membership_Choice_Group")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupMembershipChoiceStetment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Membership_Choice_Stetment");

                    b.HasKey("CrMasSupMembershipChoiceCode");

                    b.ToTable("CR_Mas_Sup_Membership_Choice", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupPostCity", b =>
                {
                    b.Property<string>("CrMasSupPostCityCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupPostCityArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Ar_Name");

                    b.Property<string>("CrMasSupPostCityConcatenateArName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Concatenate_Ar_Name");

                    b.Property<string>("CrMasSupPostCityConcatenateEnName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Concatenate_En_Name");

                    b.Property<int?>("CrMasSupPostCityCounter")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Post_City_Counter");

                    b.Property<string>("CrMasSupPostCityEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Post_City_En_Name");

                    b.Property<string>("CrMasSupPostCityGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupPostCityLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Location");

                    b.Property<string>("CrMasSupPostCityReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Reasons");

                    b.Property<string>("CrMasSupPostCityRegionsCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Regions_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupPostCityStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Post_City_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupPostCityCode");

                    b.HasIndex(new[] { "CrMasSupPostCityGroupCode" }, "IX_CR_Mas_Sup_Post_City_CR_Mas_Sup_Post_City_Group_Code");

                    b.HasIndex(new[] { "CrMasSupPostCityRegionsCode" }, "IX_CR_Mas_Sup_Post_City_CR_Mas_Sup_Post_City_Regions_Code");

                    b.ToTable("CR_Mas_Sup_Post_City", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupPostRegion", b =>
                {
                    b.Property<string>("CrMasSupPostRegionsCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Post_Regions_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupPostRegionsArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Post_Regions_Ar_Name");

                    b.Property<string>("CrMasSupPostRegionsEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Post_Regions_En_Name");

                    b.Property<string>("CrMasSupPostRegionsLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Post_Regions_Location");

                    b.Property<string>("CrMasSupPostRegionsReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Post_Regions_Reasons");

                    b.Property<string>("CrMasSupPostRegionsStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Post_Regions_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupPostRegionsCode");

                    b.ToTable("CR_Mas_Sup_Post_Regions", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterAge", b =>
                {
                    b.Property<string>("CrMasSupRenterAgeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Renter_Age_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterAgeGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Renter_Age_Group_Code")
                        .IsFixedLength();

                    b.Property<int?>("CrMasSupRenterAgeNo")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Renter_Age_No");

                    b.HasKey("CrMasSupRenterAgeCode");

                    b.HasIndex(new[] { "CrMasSupRenterAgeGroupCode" }, "IX_CR_Mas_Sup_Renter_Age_CR_Mas_Sup_Renter_Age_Group_Code");

                    b.ToTable("CR_Mas_Sup_Renter_Age", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterDrivingLicense", b =>
                {
                    b.Property<string>("CrMasSupRenterDrivingLicenseCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Driving_License_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterDrivingLicenseArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Driving_License_Ar_Name");

                    b.Property<string>("CrMasSupRenterDrivingLicenseEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Driving_License_En_Name");

                    b.Property<string>("CrMasSupRenterDrivingLicenseReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Driving_License_Reasons");

                    b.Property<string>("CrMasSupRenterDrivingLicenseStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Driving_License_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterDrivingLicenseCode");

                    b.ToTable("CR_Mas_Sup_Renter_Driving_License", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterEmployer", b =>
                {
                    b.Property<string>("CrMasSupRenterEmployerCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterEmployerArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Ar_Name");

                    b.Property<int?>("CrMasSupRenterEmployerCounter")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Counter");

                    b.Property<string>("CrMasSupRenterEmployerEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_En_Name");

                    b.Property<string>("CrMasSupRenterEmployerGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterEmployerReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Reasons");

                    b.Property<string>("CrMasSupRenterEmployerSectorCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Sector_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterEmployerStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Employer_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterEmployerCode");

                    b.HasIndex(new[] { "CrMasSupRenterEmployerGroupCode" }, "IX_CR_Mas_Sup_Renter_Employer_CR_Mas_Sup_Renter_Employer_Group_Code");

                    b.HasIndex(new[] { "CrMasSupRenterEmployerSectorCode" }, "IX_CR_Mas_Sup_Renter_Employer_CR_Mas_Sup_Renter_Employer_Sector_Code");

                    b.ToTable("CR_Mas_Sup_Renter_Employer", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterGender", b =>
                {
                    b.Property<string>("CrMasSupRenterGenderCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Renter_Gender_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterGenderArName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sup_Renter_Gender_Ar_Name");

                    b.Property<string>("CrMasSupRenterGenderEnName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sup_Renter_Gender_En_Name");

                    b.Property<string>("CrMasSupRenterGenderGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Renter_Gender_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterGenderReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Gender_Reasons");

                    b.Property<string>("CrMasSupRenterGenderStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Gender_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterGenderCode");

                    b.HasIndex(new[] { "CrMasSupRenterGenderGroupCode" }, "IX_CR_Mas_Sup_Renter_Gender_CR_Mas_Sup_Renter_Gender_Group_Code");

                    b.ToTable("CR_Mas_Sup_Renter_Gender", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterIdtype", b =>
                {
                    b.Property<string>("CrMasSupRenterIdtypeCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_IDType_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterIdtypeArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_IDType_Ar_Name");

                    b.Property<string>("CrMasSupRenterIdtypeEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_IDType_En_Name");

                    b.Property<string>("CrMasSupRenterIdtypeReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_IDType_Reasons");

                    b.Property<string>("CrMasSupRenterIdtypeStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_IDType_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterIdtypeCode");

                    b.ToTable("CR_Mas_Sup_Renter_IDType", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterMembership", b =>
                {
                    b.Property<string>("CrMasSupRenterMembershipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Renter_Membership_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterMembershipArName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sup_Renter_Membership_Ar_Name");

                    b.Property<string>("CrMasSupRenterMembershipEnName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sup_Renter_Membership_En_Name");

                    b.Property<string>("CrMasSupRenterMembershipGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Renter_Membership_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterMembershipReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Membership_Reasons");

                    b.Property<string>("CrMasSupRenterMembershipStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Membership_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterMembershipCode");

                    b.HasIndex(new[] { "CrMasSupRenterMembershipGroupCode" }, "IX_CR_Mas_Sup_Renter_Membership_CR_Mas_Sup_Renter_Membership_Group_Code");

                    b.ToTable("CR_Mas_Sup_Renter_Membership", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterNationality", b =>
                {
                    b.Property<string>("CrMasSupRenterNationalitiesCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterNationalitiesArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Ar_Name");

                    b.Property<int?>("CrMasSupRenterNationalitiesCounter")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Counter");

                    b.Property<string>("CrMasSupRenterNationalitiesEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_En_Name");

                    b.Property<string>("CrMasSupRenterNationalitiesFlag")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Flag");

                    b.Property<string>("CrMasSupRenterNationalitiesGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterNationalitiesReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Reasons");

                    b.Property<string>("CrMasSupRenterNationalitiesStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Nationalities_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterNationalitiesCode");

                    b.HasIndex(new[] { "CrMasSupRenterNationalitiesGroupCode" }, "IX_CR_Mas_Sup_Renter_Nationalities_CR_Mas_Sup_Renter_Nationalities_Group_Code");

                    b.ToTable("CR_Mas_Sup_Renter_Nationalities", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterProfession", b =>
                {
                    b.Property<string>("CrMasSupRenterProfessionsCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CR_Mas_Sup_Renter_Professions_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterProfessionsArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Professions_Ar_Name");

                    b.Property<string>("CrMasSupRenterProfessionsEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Professions_En_Name");

                    b.Property<string>("CrMasSupRenterProfessionsGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sup_Renter_Professions_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterProfessionsReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Professions_Reasons");

                    b.Property<string>("CrMasSupRenterProfessionsStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Professions_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterProfessionsCode");

                    b.HasIndex(new[] { "CrMasSupRenterProfessionsGroupCode" }, "IX_CR_Mas_Sup_Renter_Professions_CR_Mas_Sup_Renter_Professions_Group_Code");

                    b.ToTable("CR_Mas_Sup_Renter_Professions", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterSector", b =>
                {
                    b.Property<string>("CrMasSupRenterSectorCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Sector_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSupRenterSectorArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Sector_Ar_Name");

                    b.Property<string>("CrMasSupRenterSectorEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sup_Renter_Sector_En_Name");

                    b.Property<string>("CrMasSupRenterSectorReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sup_Renter_Sector_Reasons");

                    b.Property<string>("CrMasSupRenterSectorStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sup_Renter_Sector_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSupRenterSectorCode");

                    b.ToTable("CR_Mas_Sup_Renter_Sector", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysCallingKey", b =>
                {
                    b.Property<string>("CrMasSysCallingKeysCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysCallingKeysArName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_Ar_Name");

                    b.Property<long?>("CrMasSysCallingKeysCount")
                        .HasColumnType("bigint")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_Count");

                    b.Property<string>("CrMasSysCallingKeysEnName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_En_Name");

                    b.Property<string>("CrMasSysCallingKeysFlag")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_Flag");

                    b.Property<string>("CrMasSysCallingKeysNo")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_No")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysCallingKeysReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_Reasons");

                    b.Property<string>("CrMasSysCallingKeysStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Calling_Keys_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSysCallingKeysCode");

                    b.ToTable("CR_Mas_Sys_Calling_Keys", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysEvaluationType", b =>
                {
                    b.Property<string>("CrMasSysEvaluationTypesCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysEvaluationTypesArDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_Ar_Description");

                    b.Property<string>("CrMasSysEvaluationTypesEnDescription")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_En_Description");

                    b.Property<string>("CrMasSysEvaluationTypesImage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_Image");

                    b.Property<string>("CrMasSysEvaluationTypesKind")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_Kind")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysEvaluationTypesReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_Reasons");

                    b.Property<string>("CrMasSysEvaluationTypesStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Evaluation_Types_Status")
                        .IsFixedLength();

                    b.Property<long?>("CrMasSysServiceEvaluationTypesValue")
                        .HasColumnType("bigint")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Types_Value");

                    b.HasKey("CrMasSysEvaluationTypesCode");

                    b.ToTable("CR_Mas_Sys_Evaluation_Types", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysGroup", b =>
                {
                    b.Property<string>("CrMasSysGroupCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sys_Group_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysGroupArName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sys_Group_Ar_Name");

                    b.Property<bool?>("CrMasSysGroupClassified")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Group_Classified");

                    b.Property<string>("CrMasSysGroupEnName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CR_Mas_Sys_Group_En_Name");

                    b.Property<bool?>("CrMasSysGroupIndependent")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Group_Independent");

                    b.Property<string>("CrMasSysGroupReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Group_Reasons");

                    b.Property<string>("CrMasSysGroupStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Group_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSysGroupCode");

                    b.ToTable("CR_Mas_Sys_Group", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysMainTask", b =>
                {
                    b.Property<string>("CrMasSysMainTasksCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysMainTasksArName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_Ar_Name");

                    b.Property<string>("CrMasSysMainTasksConcatenateArName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_Concatenate_Ar_Name");

                    b.Property<string>("CrMasSysMainTasksConcatenateEnName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_Concatenate_En_Name");

                    b.Property<string>("CrMasSysMainTasksEnName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_En_Name");

                    b.Property<string>("CrMasSysMainTasksReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_Reasons");

                    b.Property<string>("CrMasSysMainTasksStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_Status")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysMainTasksSystem")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Main_Tasks_System")
                        .IsFixedLength();

                    b.HasKey("CrMasSysMainTasksCode");

                    b.HasIndex(new[] { "CrMasSysMainTasksSystem" }, "IX_CR_Mas_Sys_Main_Tasks_CR_Mas_Sys_Main_Tasks_System");

                    b.ToTable("CR_Mas_Sys_Main_Tasks", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysProcedure", b =>
                {
                    b.Property<string>("CrMasSysProceduresCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysProceduresArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Ar_Name");

                    b.Property<string>("CrMasSysProceduresClassification")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Classification")
                        .IsFixedLength();

                    b.Property<long?>("CrMasSysProceduresDaysAlertAboutExpire")
                        .HasColumnType("bigint")
                        .HasColumnName("CR_Mas_Sys_Procedures_Days_Alert_About_Expire");

                    b.Property<string>("CrMasSysProceduresEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Procedures_En_Name");

                    b.Property<long?>("CrMasSysProceduresKmAlertAboutExpire")
                        .HasColumnType("bigint")
                        .HasColumnName("CR_Mas_Sys_Procedures_KM_Alert_About_Expire");

                    b.Property<string>("CrMasSysProceduresReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Reasons");

                    b.Property<string>("CrMasSysProceduresStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Status")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasSysProceduresSubjectAlert")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Subject_Alert");

                    b.HasKey("CrMasSysProceduresCode");

                    b.ToTable("CR_Mas_Sys_Procedures", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysProceduresTask", b =>
                {
                    b.Property<string>("CrMasSysProceduresTasksSubTasks")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Sub_Tasks")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysProceduresTasksDeleteArName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Delete_Ar_Name");

                    b.Property<bool?>("CrMasSysProceduresTasksDeleteAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Delete_Available");

                    b.Property<string>("CrMasSysProceduresTasksDeleteEnName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Delete_En_Name");

                    b.Property<string>("CrMasSysProceduresTasksHoldArName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Hold_Ar_Name");

                    b.Property<bool?>("CrMasSysProceduresTasksHoldAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Hold_Available");

                    b.Property<string>("CrMasSysProceduresTasksHoldEnName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Hold_En_Name");

                    b.Property<string>("CrMasSysProceduresTasksInsertArName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Insert_Ar_Name");

                    b.Property<bool?>("CrMasSysProceduresTasksInsertAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Insert_Available");

                    b.Property<string>("CrMasSysProceduresTasksInsertEnName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Insert_En_Name");

                    b.Property<string>("CrMasSysProceduresTasksMainTasks")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_Main_Tasks")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysProceduresTasksSystem")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_System")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysProceduresTasksUnDeleteArName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UnDelete_Ar_Name");

                    b.Property<bool?>("CrMasSysProceduresTasksUnDeleteAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UnDelete_Available");

                    b.Property<string>("CrMasSysProceduresTasksUnDeleteEnName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UnDelete_En_Name");

                    b.Property<string>("CrMasSysProceduresTasksUnHoldArName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UnHold_Ar_Name");

                    b.Property<bool?>("CrMasSysProceduresTasksUnHoldAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UnHold_Available");

                    b.Property<string>("CrMasSysProceduresTasksUnHoldEnName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UnHold_En_Name");

                    b.Property<string>("CrMasSysProceduresTasksUpDateArName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UpDate_Ar_Name");

                    b.Property<bool?>("CrMasSysProceduresTasksUpDateAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UpDate_Available");

                    b.Property<string>("CrMasSysProceduresTasksUpDateEnName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("CR_Mas_Sys_Procedures_Tasks_UpDate_En_Name");

                    b.HasKey("CrMasSysProceduresTasksSubTasks");

                    b.HasIndex(new[] { "CrMasSysProceduresTasksMainTasks" }, "IX_CR_Mas_Sys_Procedures_Tasks_CR_Mas_Sys_Procedures_Tasks_Main_Tasks");

                    b.HasIndex(new[] { "CrMasSysProceduresTasksSystem" }, "IX_CR_Mas_Sys_Procedures_Tasks_CR_Mas_Sys_Procedures_Tasks_System");

                    b.ToTable("CR_Mas_Sys_Procedures_Tasks", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysServiceEvaluation", b =>
                {
                    b.Property<string>("CrMasSysServiceEvaluationContractNo")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Contract_No");

                    b.Property<string>("CrMasSysServiceEvaluationCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Code")
                        .IsFixedLength();

                    b.Property<DateTime?>("CrMasSysServiceEvaluationDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Date");

                    b.Property<string>("CrMasSysServiceEvaluationLessor")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Lessor")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysServiceEvaluationReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Reasons");

                    b.Property<string>("CrMasSysServiceEvaluationRenter")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Renter");

                    b.Property<TimeSpan?>("CrMasSysServiceEvaluationTime")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Time");

                    b.Property<string>("CrMasSysServiceEvaluationUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_User");

                    b.Property<long?>("CrMasSysServiceEvaluationValue")
                        .HasColumnType("bigint")
                        .HasColumnName("CR_Mas_Sys_Service_Evaluation_Value");

                    b.HasKey("CrMasSysServiceEvaluationContractNo");

                    b.HasIndex("CrMasSysServiceEvaluationCode");

                    b.HasIndex("CrMasSysServiceEvaluationLessor");

                    b.HasIndex("CrMasSysServiceEvaluationUser");

                    b.ToTable("CR_Mas_Sys_Service_Evaluation", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysStatus", b =>
                {
                    b.Property<string>("CrMasSysStatusCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Status_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysStatusArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sys_Status_Ar_Name");

                    b.Property<string>("CrMasSysStatusEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sys_Status_En_Name");

                    b.Property<string>("CrMasSysStatusReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Status_Reasons");

                    b.Property<string>("CrMasSysStatusStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Status_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSysStatusCode");

                    b.ToTable("CR_Mas_Sys_Status", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysSubTask", b =>
                {
                    b.Property<string>("CrMasSysSubTasksCode")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysSubTasksArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Ar_Name");

                    b.Property<string>("CrMasSysSubTasksConcatenateArName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Concatenate_Ar_Name");

                    b.Property<string>("CrMasSysSubTasksConcatenateEnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Concatenate_En_Name");

                    b.Property<string>("CrMasSysSubTasksEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_En_Name");

                    b.Property<string>("CrMasSysSubTasksMainCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Main_Code")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasSysSubTasksProceduresExpanded")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Procedures_Expanded");

                    b.Property<string>("CrMasSysSubTasksReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Reasons");

                    b.Property<string>("CrMasSysSubTasksStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_Status")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysSubTasksSystemCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_Sub_Tasks_System_Code")
                        .IsFixedLength();

                    b.HasKey("CrMasSysSubTasksCode");

                    b.HasIndex(new[] { "CrMasSysSubTasksMainCode" }, "IX_CR_Mas_Sys_Sub_Tasks_CR_Mas_Sys_Sub_Tasks_Main_Code");

                    b.HasIndex(new[] { "CrMasSysSubTasksSystemCode" }, "IX_CR_Mas_Sys_Sub_Tasks_CR_Mas_Sys_Sub_Tasks_System_Code");

                    b.ToTable("CR_Mas_Sys_Sub_Tasks", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysSystem", b =>
                {
                    b.Property<string>("CrMasSysSystemCode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_System_Code")
                        .IsFixedLength();

                    b.Property<string>("CrMasSysSystemArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sys_System_Ar_Name");

                    b.Property<string>("CrMasSysSystemEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_Sys_System_En_Name");

                    b.Property<string>("CrMasSysSystemReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_Sys_System_Reasons");

                    b.Property<string>("CrMasSysSystemStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_Sys_System_Status")
                        .IsFixedLength();

                    b.HasKey("CrMasSysSystemCode");

                    b.ToTable("CR_Mas_Sys_System", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserBranchValidity", b =>
                {
                    b.Property<string>("CrMasUserBranchValidityId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Id");

                    b.Property<string>("CrMasUserBranchValidityBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch")
                        .IsFixedLength();

                    b.Property<decimal?>("CrMasUserBranchValidityBranchCashAvailable")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Cash_Available");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchCashBalance")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Cash_Balance");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchCashReserved")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Cash_Reserved");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchSalesPointAvailable")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_SalesPoint_Available");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchSalesPointBalance")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_SalesPoint_Balance");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchSalesPointReserved")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_SalesPoint_Reserved");

                    b.Property<string>("CrMasUserBranchValidityBranchStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Status")
                        .IsFixedLength();

                    b.Property<decimal?>("CrMasUserBranchValidityBranchTransferAvailable")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Transfer_Available");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchTransferBalance")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Transfer_Balance");

                    b.Property<decimal?>("CrMasUserBranchValidityBranchTransferReserved")
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Branch_Transfer_Reserved");

                    b.Property<string>("CrMasUserBranchValidityLessor")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_User_Branch_Validity_Lessor")
                        .IsFixedLength();

                    b.HasKey("CrMasUserBranchValidityId");

                    b.ToTable("CR_Mas_User_Branch_Validity", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserContractValidity", b =>
                {
                    b.Property<string>("CrMasUserContractValidityUserId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Contract_Validity_User_Id");

                    b.Property<string>("CrMasUserContractValidityAdmin")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("char(22)")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Admin")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserContractValidityAge")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Age");

                    b.Property<bool?>("CrMasUserContractValidityBbrake")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Bbrake");

                    b.Property<bool?>("CrMasUserContractValidityCancel")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Cancel");

                    b.Property<bool?>("CrMasUserContractValidityChamber")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Chamber");

                    b.Property<bool?>("CrMasUserContractValidityChkecUp")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Chkec_Up");

                    b.Property<bool?>("CrMasUserContractValidityCompanyAddress")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Company_Address");

                    b.Property<decimal?>("CrMasUserContractValidityDiscountRate")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Discount_Rate");

                    b.Property<bool?>("CrMasUserContractValidityDrivingLicense")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Driving_License");

                    b.Property<bool?>("CrMasUserContractValidityEmployer")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Employer");

                    b.Property<bool?>("CrMasUserContractValidityEnd")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_End");

                    b.Property<bool?>("CrMasUserContractValidityExtension")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Extension");

                    b.Property<bool?>("CrMasUserContractValidityFbrake")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Fbrake");

                    b.Property<int?>("CrMasUserContractValidityHour")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Hour");

                    b.Property<bool?>("CrMasUserContractValidityId")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Id");

                    b.Property<bool?>("CrMasUserContractValidityInsurance")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Insurance");

                    b.Property<int?>("CrMasUserContractValidityKm")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Km");

                    b.Property<int?>("CrMasUserContractValidityLessContractValue")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Less_Contract_Value");

                    b.Property<bool?>("CrMasUserContractValidityLicenceMunicipale")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Licence_Municipale");

                    b.Property<bool?>("CrMasUserContractValidityMaintenance")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Maintenance");

                    b.Property<bool?>("CrMasUserContractValidityOil")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Oil");

                    b.Property<bool?>("CrMasUserContractValidityOperatingCard")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Operating_Card");

                    b.Property<bool>("CrMasUserContractValidityRegister")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Register");

                    b.Property<bool?>("CrMasUserContractValidityRenterAddress")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Renter_Address");

                    b.Property<bool?>("CrMasUserContractValidityTires")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Tires");

                    b.Property<bool?>("CrMasUserContractValidityTrafficLicense")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Traffic_License");

                    b.Property<bool?>("CrMasUserContractValidityTransferPermission")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Contract_Validity_Transfer_Permission");

                    b.HasKey("CrMasUserContractValidityUserId");

                    b.ToTable("CR_Mas_User_Contract_Validity", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserEvaluationRenter", b =>
                {
                    b.Property<string>("CrMasUserEvaluationRenterContractNo")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("varchar(22)")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Contract_No");

                    b.Property<string>("CrMasUserEvaluationRenterCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Code")
                        .IsFixedLength();

                    b.Property<DateTime?>("CrMasUserEvaluationRenterDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Date");

                    b.Property<string>("CrMasUserEvaluationRenterLessor")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Lessor")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserEvaluationRenterReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Reasons");

                    b.Property<string>("CrMasUserEvaluationRenterRenter")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Renter")
                        .IsFixedLength();

                    b.Property<TimeSpan?>("CrMasUserEvaluationRenterTime")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Time");

                    b.Property<string>("CrMasUserEvaluationRenterUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_User");

                    b.Property<int?>("CrMasUserEvaluationRenterValue")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Evaluation_Renter_Value");

                    b.HasKey("CrMasUserEvaluationRenterContractNo");

                    b.HasIndex("CrMasUserEvaluationRenterCode");

                    b.HasIndex("CrMasUserEvaluationRenterLessor");

                    b.HasIndex("CrMasUserEvaluationRenterUser");

                    b.ToTable("CR_Mas_User_Evaluation_Renter", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserInformation", b =>
                {
                    b.Property<string>("CrMasUserInformationCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Information_Code");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrMasUserInformationArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_User_Information_Ar_Name");

                    b.Property<bool?>("CrMasUserInformationAuthorizationAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Information_Authorization_Admin");

                    b.Property<bool?>("CrMasUserInformationAuthorizationBnan")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Information_Authorization_Bnan");

                    b.Property<bool?>("CrMasUserInformationAuthorizationBranch")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Information_Authorization_Branch");

                    b.Property<bool?>("CrMasUserInformationAuthorizationFoolwUp")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Information_Authorization_FoolwUp");

                    b.Property<bool?>("CrMasUserInformationAuthorizationOwner")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Information_Authorization_Owner");

                    b.Property<decimal?>("CrMasUserInformationAvailableBalance")
                        .HasColumnType("decimal(13,3)")
                        .HasColumnName("CR_Mas_User_Information_Available_Balance");

                    b.Property<DateTime?>("CrMasUserInformationChangePassWordLastDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Information_ChangePassWord_Last_Date");

                    b.Property<decimal?>("CrMasUserInformationCreditLimit")
                        .HasColumnType("decimal(13,3)")
                        .HasColumnName("CR_Mas_User_Information_Credit_Limit");

                    b.Property<string>("CrMasUserInformationDefaultBranch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_User_Information_Default_Branch")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserInformationDefaultLanguage")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CR_Mas_User_Information_Default_Language")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserInformationEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Information_Email");

                    b.Property<string>("CrMasUserInformationEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_User_Information_En_Name");

                    b.Property<DateTime?>("CrMasUserInformationEntryLastDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Information_Entry_Last_Date");

                    b.Property<TimeSpan?>("CrMasUserInformationEntryLastTime")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_User_Information_Entry_Last_Time");

                    b.Property<DateTime?>("CrMasUserInformationExitLastDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Information_Exit_Last_Date");

                    b.Property<TimeSpan?>("CrMasUserInformationExitLastTime")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_User_Information_Exit_Last_Time");

                    b.Property<int?>("CrMasUserInformationExitTimer")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Information_Exit_Timer");

                    b.Property<string>("CrMasUserInformationLessor")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_User_Information_Lessor")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserInformationMobileNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("CR_Mas_User_Information_Mobile_No")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserInformationOperationStatus")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Information_Operation_Status");

                    b.Property<string>("CrMasUserInformationPassWord")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Information_PassWord");

                    b.Property<string>("CrMasUserInformationPicture")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Information_Picture");

                    b.Property<string>("CrMasUserInformationReasons")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Information_Reasons");

                    b.Property<string>("CrMasUserInformationRemindMe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_User_Information_Remind_Me");

                    b.Property<decimal?>("CrMasUserInformationReservedBalance")
                        .HasColumnType("decimal(13,3)")
                        .HasColumnName("CR_Mas_User_Information_Reserved_Balance");

                    b.Property<string>("CrMasUserInformationSignature")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Information_Signature");

                    b.Property<string>("CrMasUserInformationStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Information_Status")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserInformationTasksArName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_User_Information_Tasks_Ar_Name");

                    b.Property<string>("CrMasUserInformationTasksEnName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CR_Mas_User_Information_Tasks_En_Name");

                    b.Property<decimal?>("CrMasUserInformationTotalBalance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(13,3)")
                        .HasColumnName("CR_Mas_User_Information_Total_Balance")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("CrMasUserInformationCode");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex(new[] { "CrMasUserInformationLessor" }, "IX_CR_Mas_User_Information_CR_Mas_User_Information_Lessor");

                    b.ToTable("CR_Mas_User_Information", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserLogin", b =>
                {
                    b.Property<int>("CrMasUserLoginNo")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Login_No");

                    b.Property<string>("CrMasUserLoginArOperation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_User_Login_Ar_Operation");

                    b.Property<string>("CrMasUserLoginBranch")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_User_Login_Branch")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserLoginConcatenateOperationArDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CR_Mas_User_Login_Concatenate_Operation_Ar_Description");

                    b.Property<string>("CrMasUserLoginConcatenateOperationEnDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("CR_Mas_User_Login_Concatenate_Operation_En_Description");

                    b.Property<string>("CrMasUserLoginEnOperation")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CR_Mas_User_Login_En_Operation");

                    b.Property<DateTime?>("CrMasUserLoginEntryDate")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Login_Entry_Date");

                    b.Property<TimeSpan?>("CrMasUserLoginEntryTime")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_User_Login_Entry_Time");

                    b.Property<string>("CrMasUserLoginLessor")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_User_Login_Lessor")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserLoginMainTask")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_User_Login_Main_Task")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserLoginSubComputerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Login_Sub_Computer_Code");

                    b.Property<string>("CrMasUserLoginSubComputerType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Login_Sub_Computer_Type");

                    b.Property<string>("CrMasUserLoginSubTask")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CR_Mas_User_Login_Sub_Task")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserLoginSystem")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Login_System")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserLoginUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Login_User");

                    b.HasKey("CrMasUserLoginNo");

                    b.HasIndex("CrMasUserLoginLessor");

                    b.HasIndex(new[] { "CrMasUserLoginMainTask" }, "IX_CR_Mas_User_Login_CR_Mas_User_Login_Main_Task");

                    b.HasIndex(new[] { "CrMasUserLoginSubTask" }, "IX_CR_Mas_User_Login_CR_Mas_User_Login_Sub_Task");

                    b.HasIndex(new[] { "CrMasUserLoginSystem" }, "IX_CR_Mas_User_Login_CR_Mas_User_Login_System");

                    b.HasIndex(new[] { "CrMasUserLoginUser" }, "IX_CR_Mas_User_Login_CR_Mas_User_Login_User");

                    b.ToTable("CR_Mas_User_Login", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserMainValidation", b =>
                {
                    b.Property<string>("CrMasUserMainValidationUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Main_Validation_User");

                    b.Property<string>("CrMasUserMainValidationMainTasks")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_User_Main_Validation_Main_Tasks")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserMainValidationAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Main_Validation_Authorization");

                    b.Property<string>("CrMasUserMainValidationMainSystem")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Main_Validation_Main_System")
                        .IsFixedLength();

                    b.HasKey("CrMasUserMainValidationUser", "CrMasUserMainValidationMainTasks")
                        .HasName("PK__CR_Mas_Main_Validitaion");

                    b.HasIndex(new[] { "CrMasUserMainValidationMainSystem" }, "IX_CR_Mas_User_Main_Validation_CR_Mas_User_Main_Validation_Main_System");

                    b.HasIndex(new[] { "CrMasUserMainValidationMainTasks" }, "IX_CR_Mas_User_Main_Validation_CR_Mas_User_Main_Validation_Main_Tasks");

                    b.ToTable("CR_Mas_User_Main_Validation", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserMessage", b =>
                {
                    b.Property<int>("CrMasUserMessageNo")
                        .HasColumnType("int")
                        .HasColumnName("CR_Mas_User_Message_No");

                    b.Property<string>("CrMasUserMessageContent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CR_Mas_User_Message_Content");

                    b.Property<DateTime?>("CrMasUserMessageDateWasReceived")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Message_Date_Was_Received");

                    b.Property<DateTime?>("CrMasUserMessageDateWasSent")
                        .HasColumnType("date")
                        .HasColumnName("CR_Mas_User_Message_Date_Was_Sent");

                    b.Property<string>("CrMasUserMessageLessor")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("CR_Mas_User_Message_Lessor")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserMessageStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Message_Status")
                        .IsFixedLength();

                    b.Property<TimeSpan?>("CrMasUserMessageTimeWasReceived")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_User_Message_Time_Was_Received");

                    b.Property<TimeSpan?>("CrMasUserMessageTimeWasSent")
                        .HasColumnType("time")
                        .HasColumnName("CR_Mas_User_Message_Time_Was_Sent");

                    b.Property<string>("CrMasUserMessageUserReceiver")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Message_User_Receiver");

                    b.Property<string>("CrMasUserMessageUserSender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Message_User_Sender");

                    b.HasKey("CrMasUserMessageNo");

                    b.HasIndex(new[] { "CrMasUserMessageUserReceiver" }, "IX_CR_Mas_User_Message_CR_Mas_User_Message_User_Receiver");

                    b.HasIndex(new[] { "CrMasUserMessageUserSender" }, "IX_CR_Mas_User_Message_CR_Mas_User_Message_User_Sender");

                    b.ToTable("CR_Mas_User_Message", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserProceduresValidation", b =>
                {
                    b.Property<string>("CrMasUserProceduresValidationCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Code");

                    b.Property<string>("CrMasUserProceduresValidationSubTasks")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Sub_Tasks")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserProceduresValidationDeleteAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Delete_Authorization");

                    b.Property<bool?>("CrMasUserProceduresValidationHoldAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Hold_Authorization");

                    b.Property<bool?>("CrMasUserProceduresValidationInsertAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Insert_Authorization");

                    b.Property<string>("CrMasUserProceduresValidationMainTask")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Main_Task")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserProceduresValidationRepairAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_Repair_Authorization");

                    b.Property<bool?>("CrMasUserProceduresValidationRrepairAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_RRepair_Authorization");

                    b.Property<string>("CrMasUserProceduresValidationSystem")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_System")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserProceduresValidationUnDeleteAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_UnDelete_Authorization");

                    b.Property<bool?>("CrMasUserProceduresValidationUnHoldAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_UnHold_Authorization");

                    b.Property<bool?>("CrMasUserProceduresValidationUpDateAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Procedures_Validation_UpDate_Authorization");

                    b.HasKey("CrMasUserProceduresValidationCode", "CrMasUserProceduresValidationSubTasks");

                    b.HasIndex(new[] { "CrMasUserProceduresValidationMainTask" }, "IX_CR_Mas_User_Procedures_Validation_CR_Mas_User_Procedures_Validation_Main_Task");

                    b.HasIndex(new[] { "CrMasUserProceduresValidationSubTasks" }, "IX_CR_Mas_User_Procedures_Validation_CR_Mas_User_Procedures_Validation_Sub_Tasks");

                    b.HasIndex(new[] { "CrMasUserProceduresValidationSystem" }, "IX_CR_Mas_User_Procedures_Validation_CR_Mas_User_Procedures_Validation_System");

                    b.ToTable("CR_Mas_User_Procedures_Validation", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserSubValidation", b =>
                {
                    b.Property<string>("CrMasUserSubValidationUser")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CR_Mas_User_Sub_Validation_User");

                    b.Property<string>("CrMasUserSubValidationSubTasks")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("char(7)")
                        .HasColumnName("CR_Mas_User_Sub_Validation_Sub_Tasks")
                        .IsFixedLength();

                    b.Property<bool?>("CrMasUserSubValidationAuthorization")
                        .HasColumnType("bit")
                        .HasColumnName("CR_Mas_User_Sub_Validation_Authorization");

                    b.Property<string>("CrMasUserSubValidationMain")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("CR_Mas_User_Sub_Validation_Main")
                        .IsFixedLength();

                    b.Property<string>("CrMasUserSubValidationSystem")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CR_Mas_User_Sub_Validation_System")
                        .IsFixedLength();

                    b.HasKey("CrMasUserSubValidationUser", "CrMasUserSubValidationSubTasks");

                    b.HasIndex(new[] { "CrMasUserSubValidationMain" }, "IX_CR_Mas_User_Sub_Validation_CR_Mas_User_Sub_Validation_Main");

                    b.HasIndex(new[] { "CrMasUserSubValidationSubTasks" }, "IX_CR_Mas_User_Sub_Validation_CR_Mas_User_Sub_Validation_Sub_Tasks");

                    b.HasIndex(new[] { "CrMasUserSubValidationSystem" }, "IX_CR_Mas_User_Sub_Validation_CR_Mas_User_Sub_Validation_System");

                    b.ToTable("CR_Mas_User_Sub_Validation", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrCasLessorMechanism", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasLessorInformation", "CrCasLessorMechanismCodeNavigation")
                        .WithMany("CrCasLessorMechanisms")
                        .HasForeignKey("CrCasLessorMechanismCode")
                        .IsRequired()
                        .HasConstraintName("CR_Cas_Lessor_Mechanism_CR_Mas_Lessor_Information");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysProcedure", "CrCasLessorMechanismProceduresNavigation")
                        .WithMany("CrCasLessorMechanisms")
                        .HasForeignKey("CrCasLessorMechanismProcedures")
                        .IsRequired()
                        .HasConstraintName("CR_Cas_Lessor_Mechanism_CR_Mas_Sys_Procedures");

                    b.Navigation("CrCasLessorMechanismCodeNavigation");

                    b.Navigation("CrCasLessorMechanismProceduresNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasLessorImage", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasLessorInformation", "CrMasLessorImageCodeNavigation")
                        .WithOne("CrMasLessorImage")
                        .HasForeignKey("Bnan.Inferastructure.Models.CrMasLessorImage", "CrMasLessorImageCode")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_Lessor_Image_CR_Mas_Sys_Group");

                    b.Navigation("CrMasLessorImageCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasRenterInformation", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupAccountBank", "CrMasRenterInformationBankNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationBank")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Account_Bank");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterDrivingLicense", "CrMasRenterInformationDrivingLicenseTypeNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationDrivingLicenseType")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_Driving_License");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterGender", "CrMasRenterInformationGenderNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationGender")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_Gender");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterIdtype", "CrMasRenterInformationIdtrypeNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationIdtrype")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_IDType");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterProfession", "CrMasRenterInformationJobsNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationJobs")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_Professions");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterNationality", "CrMasRenterInformationNationalityNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationNationality")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_Nationalities");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterSector", "CrMasRenterInformationSectorNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationSector")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_Sector");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterEmployer", "CrMasRenterInformationWorkplaceSubscriptionNavigation")
                        .WithMany("CrMasRenterInformations")
                        .HasForeignKey("CrMasRenterInformationWorkplaceSubscription")
                        .HasConstraintName("FK_CR_Mas_Renter_Information_CR_Mas_Sup_Renter_Employer");

                    b.Navigation("CrMasRenterInformationBankNavigation");

                    b.Navigation("CrMasRenterInformationDrivingLicenseTypeNavigation");

                    b.Navigation("CrMasRenterInformationGenderNavigation");

                    b.Navigation("CrMasRenterInformationIdtrypeNavigation");

                    b.Navigation("CrMasRenterInformationJobsNavigation");

                    b.Navigation("CrMasRenterInformationNationalityNavigation");

                    b.Navigation("CrMasRenterInformationSectorNavigation");

                    b.Navigation("CrMasRenterInformationWorkplaceSubscriptionNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarCategory", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupCarCategoryGroupNavigation")
                        .WithMany("CrMasSupCarCategories")
                        .HasForeignKey("CrMasSupCarCategoryGroup")
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Category_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupCarCategoryGroupNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarDistribution", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupCarBrand", "CrMasSupCarDistributionBrandNavigation")
                        .WithMany("CrMasSupCarDistributions")
                        .HasForeignKey("CrMasSupCarDistributionBrand")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Distribution_CR_Mas_Sup_Car_Brand");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupCarCategory", "CrMasSupCarDistributionCategoryNavigation")
                        .WithMany("CrMasSupCarDistributions")
                        .HasForeignKey("CrMasSupCarDistributionCategory")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Distribution_CR_Mas_Sup_Car_Category");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupCarModel", "CrMasSupCarDistributionModelNavigation")
                        .WithMany("CrMasSupCarDistributions")
                        .HasForeignKey("CrMasSupCarDistributionModel")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Distribution_CR_Mas_Sup_Car_Model");

                    b.Navigation("CrMasSupCarDistributionBrandNavigation");

                    b.Navigation("CrMasSupCarDistributionCategoryNavigation");

                    b.Navigation("CrMasSupCarDistributionModelNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarModel", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupCarBrand", "CrMasSupCarModelBrandNavigation")
                        .WithMany("CrMasSupCarModels")
                        .HasForeignKey("CrMasSupCarModelBrand")
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Model_CR_Mas_Sup_Car_Brand");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupCarModelGroupNavigation")
                        .WithMany("CrMasSupCarModels")
                        .HasForeignKey("CrMasSupCarModelGroup")
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Model_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupCarModelBrandNavigation");

                    b.Navigation("CrMasSupCarModelGroupNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarYear", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupCarYearGroupNavigation")
                        .WithMany("CrMasSupCarYears")
                        .HasForeignKey("CrMasSupCarYearGroup")
                        .HasConstraintName("FK_CR_Mas_Sup_Car_Year_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupCarYearGroupNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupContractAdditional", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupContractAdditionalGroupNavigation")
                        .WithMany("CrMasSupContractAdditionals")
                        .HasForeignKey("CrMasSupContractAdditionalGroup")
                        .HasConstraintName("FK_CR_Mas_Sup_Contract_Additional_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupContractAdditionalGroupNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupContractOption", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupContractOptionsGroupNavigation")
                        .WithMany("CrMasSupContractOptions")
                        .HasForeignKey("CrMasSupContractOptionsGroup")
                        .HasConstraintName("FK_CR_Mas_Sup_Contract_Options_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupContractOptionsGroupNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupPostCity", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupPostCityGroupCodeNavigation")
                        .WithMany("CrMasSupPostCities")
                        .HasForeignKey("CrMasSupPostCityGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Post_City_CR_Mas_Sys_Group");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupPostRegion", "CrMasSupPostCityRegionsCodeNavigation")
                        .WithMany("CrMasSupPostCities")
                        .HasForeignKey("CrMasSupPostCityRegionsCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Post_City_CR_Mas_Sup_Post_Regions");

                    b.Navigation("CrMasSupPostCityGroupCodeNavigation");

                    b.Navigation("CrMasSupPostCityRegionsCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterAge", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupRenterAgeGroupCodeNavigation")
                        .WithMany("CrMasSupRenterAges")
                        .HasForeignKey("CrMasSupRenterAgeGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Age_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupRenterAgeGroupCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterEmployer", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupRenterEmployerGroupCodeNavigation")
                        .WithMany("CrMasSupRenterEmployers")
                        .HasForeignKey("CrMasSupRenterEmployerGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Employer_CR_Mas_Sys_Group");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSupRenterSector", "CrMasSupRenterEmployerSectorCodeNavigation")
                        .WithMany("CrMasSupRenterEmployers")
                        .HasForeignKey("CrMasSupRenterEmployerSectorCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Employer_CR_Mas_Sup_Renter_Sector");

                    b.Navigation("CrMasSupRenterEmployerGroupCodeNavigation");

                    b.Navigation("CrMasSupRenterEmployerSectorCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterGender", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupRenterGenderGroupCodeNavigation")
                        .WithMany("CrMasSupRenterGenders")
                        .HasForeignKey("CrMasSupRenterGenderGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Gender_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupRenterGenderGroupCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterMembership", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupRenterMembershipGroupCodeNavigation")
                        .WithMany("CrMasSupRenterMemberships")
                        .HasForeignKey("CrMasSupRenterMembershipGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Membership_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupRenterMembershipGroupCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterNationality", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupRenterNationalitiesGroupCodeNavigation")
                        .WithMany("CrMasSupRenterNationalities")
                        .HasForeignKey("CrMasSupRenterNationalitiesGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Nationalities_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupRenterNationalitiesGroupCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterProfession", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysGroup", "CrMasSupRenterProfessionsGroupCodeNavigation")
                        .WithMany("CrMasSupRenterProfessions")
                        .HasForeignKey("CrMasSupRenterProfessionsGroupCode")
                        .HasConstraintName("FK_CR_Mas_Sup_Renter_Professions_CR_Mas_Sys_Group");

                    b.Navigation("CrMasSupRenterProfessionsGroupCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysMainTask", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasSysMainTasksSystemNavigation")
                        .WithMany("CrMasSysMainTasks")
                        .HasForeignKey("CrMasSysMainTasksSystem")
                        .HasConstraintName("FK_CR_Mas_Sys_Main_Tasks_CR_Mas_Sys_System");

                    b.Navigation("CrMasSysMainTasksSystemNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysProceduresTask", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysMainTask", "CrMasSysProceduresTasksMainTasksNavigation")
                        .WithMany("CrMasSysProceduresTasks")
                        .HasForeignKey("CrMasSysProceduresTasksMainTasks")
                        .HasConstraintName("FK_CR_Mas_Sys_Procedures_Tasks_CR_Mas_Sys_Main_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasSysProceduresTasksSystemNavigation")
                        .WithMany("CrMasSysProceduresTasks")
                        .HasForeignKey("CrMasSysProceduresTasksSystem")
                        .HasConstraintName("FK_CR_Mas_Sys_Procedures_Tasks_CR_Mas_Sys_System");

                    b.Navigation("CrMasSysProceduresTasksMainTasksNavigation");

                    b.Navigation("CrMasSysProceduresTasksSystemNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysServiceEvaluation", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysEvaluationType", "CrMasSysServiceEvaluationCodeNavigation")
                        .WithMany("CrMasSysServiceEvaluations")
                        .HasForeignKey("CrMasSysServiceEvaluationCode")
                        .HasConstraintName("CR_Mas_Sys_Service_Evaluation_CR_Mas_Sys_Evaluation_Types");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasLessorInformation", "CrMasSysServiceEvaluationLessorNavigation")
                        .WithMany("CrMasSysServiceEvaluations")
                        .HasForeignKey("CrMasSysServiceEvaluationLessor")
                        .HasConstraintName("CR_Mas_Sys_Service_Evaluation_CR_Mas_Lessor_Information");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasSysServiceEvaluationUserNavigation")
                        .WithMany("CrMasSysServiceEvaluations")
                        .HasForeignKey("CrMasSysServiceEvaluationUser")
                        .HasConstraintName("CR_Mas_Sys_Service_Evaluation_CR_Mas_User_Information");

                    b.Navigation("CrMasSysServiceEvaluationCodeNavigation");

                    b.Navigation("CrMasSysServiceEvaluationLessorNavigation");

                    b.Navigation("CrMasSysServiceEvaluationUserNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysSubTask", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysMainTask", "CrMasSysSubTasksMainCodeNavigation")
                        .WithMany("CrMasSysSubTasks")
                        .HasForeignKey("CrMasSysSubTasksMainCode")
                        .HasConstraintName("FK_CR_Mas_Sys_Sub_Tasks_CR_Mas_Sys_Main_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasSysSubTasksSystemCodeNavigation")
                        .WithMany("CrMasSysSubTasks")
                        .HasForeignKey("CrMasSysSubTasksSystemCode")
                        .HasConstraintName("FK_CR_Mas_Sys_Sub_Tasks_CR_Mas_Sys_System");

                    b.Navigation("CrMasSysSubTasksMainCodeNavigation");

                    b.Navigation("CrMasSysSubTasksSystemCodeNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserBranchValidity", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserBranchValidityNavigation")
                        .WithOne("CrMasUserBranchValidity")
                        .HasForeignKey("Bnan.Inferastructure.Models.CrMasUserBranchValidity", "CrMasUserBranchValidityId")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Branch_Validity_CR_Mas_User_Information");

                    b.Navigation("CrMasUserBranchValidityNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserContractValidity", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserContractValidityUser")
                        .WithOne("CrMasUserContractValidity")
                        .HasForeignKey("Bnan.Inferastructure.Models.CrMasUserContractValidity", "CrMasUserContractValidityUserId")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Contract_Validity_CR_Mas_User_Information");

                    b.Navigation("CrMasUserContractValidityUser");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserEvaluationRenter", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysEvaluationType", "CrMasUserEvaluationRenterCodeNavigation")
                        .WithMany("CrMasUserEvaluationRenters")
                        .HasForeignKey("CrMasUserEvaluationRenterCode")
                        .HasConstraintName("CR_Mas_User_Evaluation_Renter_CR_Mas_Sys_Evaluation_Types");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasLessorInformation", "CrMasUserEvaluationRenterLessorNavigation")
                        .WithMany("CrMasUserEvaluationRenters")
                        .HasForeignKey("CrMasUserEvaluationRenterLessor")
                        .HasConstraintName("CR_Mas_User_Evaluation_Renter_CR_Mas_Lessor_Information");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserEvaluationRenterUserNavigation")
                        .WithMany("CrMasUserEvaluationRenters")
                        .HasForeignKey("CrMasUserEvaluationRenterUser")
                        .HasConstraintName("CR_Mas_User_Evaluation_Renter_CR_Mas_User_Information");

                    b.Navigation("CrMasUserEvaluationRenterCodeNavigation");

                    b.Navigation("CrMasUserEvaluationRenterLessorNavigation");

                    b.Navigation("CrMasUserEvaluationRenterUserNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserInformation", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasLessorInformation", "CrMasUserInformationLessorNavigation")
                        .WithMany("CrMasUserInformations")
                        .HasForeignKey("CrMasUserInformationLessor")
                        .HasConstraintName("FK_CR_Mas_User_Information_CR_Mas_Lessor_Information");

                    b.Navigation("CrMasUserInformationLessorNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserLogin", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasLessorInformation", "CrMasUserLoginLessorNavigation")
                        .WithMany("CrMasUserLogins")
                        .HasForeignKey("CrMasUserLoginLessor")
                        .HasConstraintName("CR_Mas_User_Login_CR_Mas_Lessor_Information");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysMainTask", "CrMasUserLoginMainTaskNavigation")
                        .WithMany("CrMasUserLogins")
                        .HasForeignKey("CrMasUserLoginMainTask")
                        .HasConstraintName("FK_CR_Mas_User_Login_CR_Mas_Sys_Main_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSubTask", "CrMasUserLoginSubTaskNavigation")
                        .WithMany("CrMasUserLogins")
                        .HasForeignKey("CrMasUserLoginSubTask")
                        .HasConstraintName("FK_CR_Mas_User_Login_CR_Mas_Sys_Sub_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasUserLoginSystemNavigation")
                        .WithMany("CrMasUserLogins")
                        .HasForeignKey("CrMasUserLoginSystem")
                        .HasConstraintName("FK_CR_Mas_User_Login_CR_Mas_Sys_System");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserLoginUserNavigation")
                        .WithMany("CrMasUserLogins")
                        .HasForeignKey("CrMasUserLoginUser")
                        .HasConstraintName("FK_CR_Mas_User_Login_CR_Mas_User_Information");

                    b.Navigation("CrMasUserLoginLessorNavigation");

                    b.Navigation("CrMasUserLoginMainTaskNavigation");

                    b.Navigation("CrMasUserLoginSubTaskNavigation");

                    b.Navigation("CrMasUserLoginSystemNavigation");

                    b.Navigation("CrMasUserLoginUserNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserMainValidation", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasUserMainValidationMainSystemNavigation")
                        .WithMany("CrMasUserMainValidations")
                        .HasForeignKey("CrMasUserMainValidationMainSystem")
                        .HasConstraintName("FK_CR_Mas_User_Main_Validation_CR_Mas_Sys_System");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysMainTask", "CrMasUserMainValidationMainTasksNavigation")
                        .WithMany("CrMasUserMainValidations")
                        .HasForeignKey("CrMasUserMainValidationMainTasks")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Main_Validation_CR_Mas_Sys_Main_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserMainValidationUserNavigation")
                        .WithMany("CrMasUserMainValidations")
                        .HasForeignKey("CrMasUserMainValidationUser")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Main_Validation_CR_Mas_User_Information");

                    b.Navigation("CrMasUserMainValidationMainSystemNavigation");

                    b.Navigation("CrMasUserMainValidationMainTasksNavigation");

                    b.Navigation("CrMasUserMainValidationUserNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserMessage", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserMessageUserReceiverNavigation")
                        .WithMany("CrMasUserMessageCrMasUserMessageUserReceiverNavigations")
                        .HasForeignKey("CrMasUserMessageUserReceiver")
                        .HasConstraintName("FK_CR_Mas_User_Message_CR_Mas_User_Message_User_Receiver");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserMessageUserSenderNavigation")
                        .WithMany("CrMasUserMessageCrMasUserMessageUserSenderNavigations")
                        .HasForeignKey("CrMasUserMessageUserSender")
                        .HasConstraintName("FK_CR_Mas_User_Message_CR_Mas_User_Information_User_Sender");

                    b.Navigation("CrMasUserMessageUserReceiverNavigation");

                    b.Navigation("CrMasUserMessageUserSenderNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserProceduresValidation", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserProceduresValidationCodeNavigation")
                        .WithMany("CrMasUserProceduresValidations")
                        .HasForeignKey("CrMasUserProceduresValidationCode")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Procedures_Validation_CR_Mas_User_Information");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysMainTask", "CrMasUserProceduresValidationMainTaskNavigation")
                        .WithMany("CrMasUserProceduresValidations")
                        .HasForeignKey("CrMasUserProceduresValidationMainTask")
                        .HasConstraintName("FK_CR_Mas_User_Procedures_Validation_CR_Mas_Sys_Main_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSubTask", "CrMasUserProceduresValidationSubTasksNavigation")
                        .WithMany("CrMasUserProceduresValidations")
                        .HasForeignKey("CrMasUserProceduresValidationSubTasks")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Procedures_Validation_CR_Mas_Sys_Sub_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasUserProceduresValidationSystemNavigation")
                        .WithMany("CrMasUserProceduresValidations")
                        .HasForeignKey("CrMasUserProceduresValidationSystem")
                        .HasConstraintName("FK_CR_Mas_User_Procedures_Validation_CR_Mas_Sys_System");

                    b.Navigation("CrMasUserProceduresValidationCodeNavigation");

                    b.Navigation("CrMasUserProceduresValidationMainTaskNavigation");

                    b.Navigation("CrMasUserProceduresValidationSubTasksNavigation");

                    b.Navigation("CrMasUserProceduresValidationSystemNavigation");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserSubValidation", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysMainTask", "CrMasUserSubValidationMainNavigation")
                        .WithMany("CrMasUserSubValidations")
                        .HasForeignKey("CrMasUserSubValidationMain")
                        .HasConstraintName("FK_CR_Mas_User_Sub_Validation_CR_Mas_Sys_Main_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSubTask", "CrMasUserSubValidationSubTasksNavigation")
                        .WithMany("CrMasUserSubValidations")
                        .HasForeignKey("CrMasUserSubValidationSubTasks")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Sub_Validation_CR_Mas_Sys_Sub_Tasks");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasSysSystem", "CrMasUserSubValidationSystemNavigation")
                        .WithMany("CrMasUserSubValidations")
                        .HasForeignKey("CrMasUserSubValidationSystem")
                        .HasConstraintName("FK_CR_Mas_User_Sub_Validation_CR_Mas_Sys_System");

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", "CrMasUserSubValidationUserNavigation")
                        .WithMany("CrMasUserSubValidations")
                        .HasForeignKey("CrMasUserSubValidationUser")
                        .IsRequired()
                        .HasConstraintName("FK_CR_Mas_User_Sub_Validation_CR_Mas_User_Information");

                    b.Navigation("CrMasUserSubValidationMainNavigation");

                    b.Navigation("CrMasUserSubValidationSubTasksNavigation");

                    b.Navigation("CrMasUserSubValidationSystemNavigation");

                    b.Navigation("CrMasUserSubValidationUserNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Bnan.Inferastructure.Models.CrMasUserInformation", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasLessorInformation", b =>
                {
                    b.Navigation("CrCasLessorMechanisms");

                    b.Navigation("CrMasLessorImage")
                        .IsRequired();

                    b.Navigation("CrMasSysServiceEvaluations");

                    b.Navigation("CrMasUserEvaluationRenters");

                    b.Navigation("CrMasUserInformations");

                    b.Navigation("CrMasUserLogins");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupAccountBank", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarBrand", b =>
                {
                    b.Navigation("CrMasSupCarDistributions");

                    b.Navigation("CrMasSupCarModels");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarCategory", b =>
                {
                    b.Navigation("CrMasSupCarDistributions");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupCarModel", b =>
                {
                    b.Navigation("CrMasSupCarDistributions");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupPostRegion", b =>
                {
                    b.Navigation("CrMasSupPostCities");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterDrivingLicense", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterEmployer", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterGender", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterIdtype", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterNationality", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterProfession", b =>
                {
                    b.Navigation("CrMasRenterInformations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSupRenterSector", b =>
                {
                    b.Navigation("CrMasRenterInformations");

                    b.Navigation("CrMasSupRenterEmployers");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysEvaluationType", b =>
                {
                    b.Navigation("CrMasSysServiceEvaluations");

                    b.Navigation("CrMasUserEvaluationRenters");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysGroup", b =>
                {
                    b.Navigation("CrMasSupCarCategories");

                    b.Navigation("CrMasSupCarModels");

                    b.Navigation("CrMasSupCarYears");

                    b.Navigation("CrMasSupContractAdditionals");

                    b.Navigation("CrMasSupContractOptions");

                    b.Navigation("CrMasSupPostCities");

                    b.Navigation("CrMasSupRenterAges");

                    b.Navigation("CrMasSupRenterEmployers");

                    b.Navigation("CrMasSupRenterGenders");

                    b.Navigation("CrMasSupRenterMemberships");

                    b.Navigation("CrMasSupRenterNationalities");

                    b.Navigation("CrMasSupRenterProfessions");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysMainTask", b =>
                {
                    b.Navigation("CrMasSysProceduresTasks");

                    b.Navigation("CrMasSysSubTasks");

                    b.Navigation("CrMasUserLogins");

                    b.Navigation("CrMasUserMainValidations");

                    b.Navigation("CrMasUserProceduresValidations");

                    b.Navigation("CrMasUserSubValidations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysProcedure", b =>
                {
                    b.Navigation("CrCasLessorMechanisms");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysSubTask", b =>
                {
                    b.Navigation("CrMasUserLogins");

                    b.Navigation("CrMasUserProceduresValidations");

                    b.Navigation("CrMasUserSubValidations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasSysSystem", b =>
                {
                    b.Navigation("CrMasSysMainTasks");

                    b.Navigation("CrMasSysProceduresTasks");

                    b.Navigation("CrMasSysSubTasks");

                    b.Navigation("CrMasUserLogins");

                    b.Navigation("CrMasUserMainValidations");

                    b.Navigation("CrMasUserProceduresValidations");

                    b.Navigation("CrMasUserSubValidations");
                });

            modelBuilder.Entity("Bnan.Inferastructure.Models.CrMasUserInformation", b =>
                {
                    b.Navigation("CrMasSysServiceEvaluations");

                    b.Navigation("CrMasUserBranchValidity")
                        .IsRequired();

                    b.Navigation("CrMasUserContractValidity")
                        .IsRequired();

                    b.Navigation("CrMasUserEvaluationRenters");

                    b.Navigation("CrMasUserLogins");

                    b.Navigation("CrMasUserMainValidations");

                    b.Navigation("CrMasUserMessageCrMasUserMessageUserReceiverNavigations");

                    b.Navigation("CrMasUserMessageCrMasUserMessageUserSenderNavigations");

                    b.Navigation("CrMasUserProceduresValidations");

                    b.Navigation("CrMasUserSubValidations");
                });
#pragma warning restore 612, 618
        }
    }
}
